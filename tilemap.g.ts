// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`1e00100001010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000101000b020206000000000b0202020202020202020600000000000000000101000300000a0202020805000000000000000000040202080202020600010100030000000000000300000b020202020802020500000300000003000101000309020600000003000003000000000300000000000900000003000101000300000300000003000003000000000300000b0202080202020c00010100040202070206000300000300000000030000030000030000000300010100030000000003000300000a080202020500000300000300000003000101000309020600030003000000030000000000000300000a0202090300010100030000040205000a08020207060902020208050000000000000300010100030000030000000003000000030000000003000000000b02020c000101000300000300000000030000000300000000030000000003000003000101000a02020702020202050000000a020202020702020202050000090001010000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101`, img`
222222222222222222222222222222
222222222222222222222222222222
22....2222...........222222222
22.22......222222222........22
22.222222.22.........22.222.22
22.2..222.22.2222.222222222.22
22.22.222.22.2222.22........22
22......2.22.2222.22.22.222.22
22.2222.2.22......22.22.222.22
22.2..2.2.222.222222.22...2.22
22.22...2......2.....222222.22
22.22.2222.222.2222.2222....22
22.22.2222.222.2222.2222.22.22
22.........222...........22222
222222222222222222222222222222
222222222222222222222222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.vehicle.roadHorizontal,sprites.vehicle.roadVertical,sprites.vehicle.roadIntersection2,sprites.vehicle.roadTurn4,sprites.vehicle.roadTurn2,sprites.vehicle.roadIntersection1,sprites.vehicle.roadIntersection3,sprites.builtin.brick,sprites.vehicle.roadTurn3,sprites.vehicle.roadTurn1,sprites.vehicle.roadIntersection4], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "CherryTile":
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
